#!/usr/bin/env php
<?php
/**
 * This file is part of OXID Console.
 *
 * OXID Console is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * OXID Console is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with OXID Console.  If not, see <http://www.gnu.org/licenses/>.
 *
 * @author    OXID Professional services
 * @link      http://www.oxid-esales.com
 * @copyright (C) OXID eSales AG 2003-2014
 */

require_once __DIR__ . '/../../bootstrap.php';

// OXID Bug: Smarty gets loaded only with oxUtils class
// Invoking autoloader to load oxUtils class so Smarty class
// gets loaded too
class_exists( 'oxUtils' );

if ( !function_exists( 'module_enabled_count' ) ) {

    /**
     * Get count of shops where module is enabled
     *
     * @param $sModuleId
     *
     * @return int
     */
    function module_enabled_count( $sModuleId )
    {
        $aModuleIds = array_keys( oxRegistry::getConfig()->getConfigParam( 'aModulePaths' ) );
        if ( !in_array( $sModuleId, $aModuleIds ) ) {
            return 0;
        }

        $aConfigs = oxSpecificShopConfig::getAll();
        $iCount   = 0;

        foreach ( $aConfigs as $oConfig ) {
            $aEnabledModules = array_diff( $aModuleIds, $oConfig->getConfigParam( 'aDisabledModules' ) );
            if ( in_array( $sModuleId, $aEnabledModules ) ) {
                $iCount++;
            }
        }

        return $iCount;
    }
}

/** @var oxConsoleApplication $oConsole */
$oConsole = oxNew( 'oxConsoleApplication' );
$oConsole->run();
